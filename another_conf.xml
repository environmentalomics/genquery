<gq_config>
<!--
    A sample configuration for GenQuery to work on a new installation
    Designed for reding by XML::Simple
-->

<!--
    Settings you probably want to change
    ====================================
-->

<!-- Optionally limit menus to just one category -->
<only_category />

<!-- Where to get the HTML templates -->
<!-- <template_dir>/etc/genquery/template</template_dir> -->
<template_dir>/home/tbooth/sandbox/genquery/new/template</template_dir>

<!-- Parameters to be passed to all templates; use these as you
     see fit.
-->
<template_vars>
    <SITE_TITLE>GenQuery</SITE_TITLE>
    <SITE_BANNER>GenQuery another_conf</SITE_BANNER>
</template_vars>

<!-- The Database Connection.  You can define several of these -
     if there is just one then give it id='0'
-->
<db_connection id="0">
    <db_type>Pg</db_type>
    <db_host>localhost</db_host> <!--Leave blank to connect via socket or use PGHOST env var -->
    <db_name></db_name>
    <db_user></db_user> 
    <db_pass></db_pass>
    <!-- <db_schema>public</db_schema> -->

    <!-- Set a display name - will default to name@host -->
    <display_name></display_name>

    <!-- Prompt for login/pass
	#NOTE - currently it is hard-coded that db_user and db_pass will not
	#show up in permalinks, irrespective of how things are configured.
	#That should probably be set here
    -->
    <prompt>
	<item>db_type</item>
	<prompt_text>Database driver</prompt_text>
	<prompt_longtext>Database type (eg. Pg for PostgreSQL)</prompt_longtext>
	<input_type>MENU</input_type>
	<keep_in_links>yes</keep_in_links>
	<option>Pg</option>
	<option>mysql</option>
	<option>Oracle</option>
    </prompt>
    <prompt>
	<item>db_host</item>
	<prompt_text>Database host</prompt_text>
	<prompt_longtext>
	    Name of machine to connect to - defaults to the machine running the GenQuery server.
	</prompt_longtext>
	<input_type>TEXT</input_type>
	<keep_in_links>yes</keep_in_links>
    </prompt>
    <prompt>
	<item>db_name</item>
	<prompt_text>Database name</prompt_text>
	<prompt_longtext>
	    Name of database to connect to: For example, use "psql -l" on the command line 
	    to list PostgreSQL databases on this machine.
	</prompt_longtext>
	<input_type>TEXT</input_type>
	<keep_in_links>yes</keep_in_links>
    </prompt>
    <prompt>
	<item>db_user</item>
	<prompt_text>User Name</prompt_text>
	<prompt_longtext>Your user name on the database</prompt_longtext>
	<input_type>TEXT</input_type>
	<keep_in_links>no</keep_in_links> <!-- yes/no -->
    </prompt>
    <prompt>
	<item>db_pass</item>
	<prompt_text>Password</prompt_text>
	<input_type>PASS</input_type>
    </prompt>

    <!-- Uncomment these to allow queries to be loaded from the database in classic style -->
    <query_defs>genquery.query_def</query_defs>
    <query_params>genquery.query_param</query_params>
    <!--    <query_linkouts>genquery.query_linkout</query_linkouts> -->
</db_connection>

<!-- If not using queries from the DB, you need to define them here 
     category > query > parameter
-->
<query_category name='Get Started With GenQuery'>
    <query_definition id='1'>
	<title>The GenQuery Home Page</title>
	<long_label>Information and documentation about GenQuery</long_label>
	<query_url>http://nebc.nox.ac.uk/projects/genquery</query_url>
    </query_definition>
    <query_definition id='2'>
	<title>The NEBC Home Page</title>
	<long_label>Link to the NEBC</long_label>
	<hide/>
	<icon_index/>
	<column_head/>
	<query_body/>
	<query_url>http://nebc.nox.ac.uk</query_url>
    </query_definition>
</query_category>
<query_category name='Sample Queries for PostgreSQL'>
    <query_definition id="10">
	<title>List databases</title>
	<long_label>Show the databases on the system</long_label>
	<query_body>
	    SELECT datname, pg_user.usename, pg_encoding_to_char(encoding),
	    CASE WHEN datistemplate THEN 'yes' ELSE 'no' END,
	    CASE WHEN datallowconn THEN 'yes' ELSE 'no' END
	    FROM pg_database INNER JOIN pg_user ON
	    ( pg_user.usesysid = datdba );
	</query_body>
	<column_head>Database name;Owner;Encoding;Is template;Allowing connections</column_head>
    </query_definition>
    <query_definition id="11">
	<title>Show users</title>
	<long_label>Show the users on the system</long_label>
	<query_body>
	    SELECT * FROM pg_user
	    $?PARAM1{{ WHERE usename = $PARAM1 }}
	</query_body>
	<column_head>Name;ID;Can create;Superuser;Can Update;Passwd;Expired;Config</column_head>
	<query_param id="1">
	    <param_type>MENU</param_type>
	    <param_text>Show user</param_text>
	    <menu_query>SELECT usename FROM pg_user ORDER BY usename</menu_query>
	</query_param>
    </query_definition>
    <query_definition id="12">
	<title>Show tables</title>
	<long_label>Show all the tables in this database</long_label>
	<query_body>
	    SELECT schemaname, tablename, tableowner FROM pg_tables 
	    WHERE schemaname NOT IN ('pg_catalog', 'information_schema') 
	    $?SCHEMA{{ AND schemaname IN ( $SCHEMA ) }}
	    ORDER BY schemaname, tablename;
	</query_body>
	<column_head>Schema;Table Name;Owner</column_head>
	<query_param id="1">
	    <param_type>MULTI</param_type>
	    <param_name>SCHEMA</param_name>
	    <param_text>Limit to schema</param_text>
	    <menu_query>SELECT distinct schemaname FROM pg_tables WHERE schemaname 
			NOT IN ('pg_catalog', 'information_schema')
	    </menu_query>
	</query_param>
    </query_definition>
    <query_definition id="15">
	<title>Compose your own query</title>
	<long_label>Type an SQL "SELECT ..." statement</long_label>
	<query_body>$_SQL</query_body>
	<query_param id='1'>
	    <param_type>BIGTEXT</param_type>
	    <param_name>SQL</param_name>
	    <param_text>Query</param_text>
	    <menu_query/>
	</query_param>
    </query_definition>
</query_category>
<query_category name='Sample Queries for MySQL'>
    <query_definition id="20">
	<title>List databases</title>
	<long_label>Show the databases on the system</long_label>
	<query_body>
	    show databases;
	</query_body>
	<column_head>Database name</column_head>
    </query_definition>
    <query_definition id="21">
	<title>Show tables</title>
	<long_label>Show the tables in a database</long_label>
	<query_body>
	    show tables from $_DB;
	    $?COMMENT{{ Note use of the $_ form to bypass quoting. }}
	</query_body>
	<query_param id="1">
	    <param_type>MENU</param_type>
	    <param_name>DB</param_name>
	    <param_text>Select database</param_text>
	    <menu_query>SHOW DATABASES</menu_query>
	    <suppress_all>yes</suppress_all>
	</query_param>
    </query_definition>
    <query_definition id="22">
	<title>Compose your own query</title>
	<long_label>Type an SQL "SELECT ..." statement</long_label>
	<query_body>$_SQL</query_body>
	<query_param id='1'>
	    <param_type>BIGTEXT</param_type>
	    <param_name>SQL</param_name>
	    <param_text>Query</param_text>
	    <menu_query/>
	</query_param>
    </query_definition>
</query_category>

<!--
    Some global system settings
    ===========================
-->

<!--
    Passes the query definitions back and forth.  Hopefully speeds
    up menu navigation by reducing database accesses. (yes/no)
-->
<cache_queries>no</cache_queries>

<!--
    Cookies can be used to store db_user and db_pass rather than sending
    them as CGI parameters. (yes/no/both)  Default is no.  Both is probably a
    better bet for most people as it will work without cookies but work better
    with them.
-->
<login_cookies>yes</login_cookies>
</gq_config>
